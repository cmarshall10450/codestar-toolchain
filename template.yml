AWSTemplateFormatVersion: 2010-09-09
Transform:
- AWS::Serverless-2016-10-31

Parameters:
  ProjectId:
    Type: String
    Description: Name of the project to use in resources
  CodeDeployRole:
    Type: String
    Description: IAM role to allow AWS CodeDeploy to manage deployment of AWS Lambda functions
  Stage:
    Type: String
    Description: The name for a project pipeline stage, such as Staging or Prod, for which resources are provisioned and deployed.
    Default: ''

Globals:
  Function:
    AutoPublishAlias: live
    Runtime: python3.7
    Role:
        Fn::GetAtt:
        - LambdaExecutionRole
        - Arn
    Stage: !Sub ${Stage}
    DeploymentPreference:
      Enabled: true
      Type: Canary10Percent5Minutes
      Role: !Ref CodeDeployRole

Resources:
  CustomerProfile:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub '${ProjectId}-customer-profile-${Stage}fn'
      CodeUri: customer/
      Handler: profile.handler
      Events:
        CreateCustomerProfile:
          Type: Api
          Properties:
            Path: /customer/profile
            Method: post
      Environment:
        Variables:
          LOG_LEVEL: INFO
          POWERTOOLS_SERVICE_NAME: CustomerProfile
  LambdaExecutionRole:
    Description: Creating service role in IAM for AWS Lambda
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub '${ProjectId}-${Stage}-execution-role'
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service: [lambda.amazonaws.com]
          Action: sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - !Sub 'arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'